---
  - name: "disable fastestmirror"
    become: yes
    shell: sed -i 's/enabled=1/enabled=0/' /etc/yum/pluginconf.d/fastestmirror.conf
    when: inventory_hostname == groups["client"][0] and MEDIA_COPY is defined and MEDIA_COPY !=""
    ignore_errors: true
    tags:
      - download
      
  - name: "yum clean all"
    become: yes
    shell: yum -y clean all
    when: inventory_hostname == groups["client"][0] and MEDIA_COPY is defined and MEDIA_COPY !=""
    ignore_errors: true
    tags:
      - download

  - name: "dummy yum command (GPGKEY INSTALL)"
    become: yes
    shell: yum -y search nfs-utils
    when: inventory_hostname == groups["client"][0] and MEDIA_COPY is defined and MEDIA_COPY !=""
    ignore_errors: true
    tags:
      - download
      
  - name: "install unzip"
    become: yes
    yum: name=unzip state=present
    when: inventory_hostname == groups["client"][0] and MEDIA_COPY is defined and MEDIA_COPY !=""
    tags:
      - download
      
  - name: "crete directory"
    become: yes
    file: path={{ MEDIA_PATH }} state=directory mode=0755 group=root owner=root
    when: inventory_hostname == groups["client"][0] and MEDIA_COPY is defined and MEDIA_COPY !=""
    tags:
      - download
      
  - name: "copy media"
    become: yes
    copy: src="/media/{{ item }}" dest="{{ MEDIA_PATH }}/{{ item }}"
    when: inventory_hostname == groups["client"][0] and MEDIA_COPY is defined and MEDIA_COPY !=""
    with_items:
      - "{{ DB_MEDIA1 }}"
    tags:
      - download
      
  - name: "unzip oracle media & delete"
    become: yes
    shell: "unzip {{ MEDIA_PATH }}/{{ item }} -d {{ MEDIA_PATH }} && rm -f {{ MEDIA_PATH }}/{{ item }}"
    when: inventory_hostname == groups["client"][0] 
    with_items:
      - "{{ DB_MEDIA1 }}"
    tags:
      - download
  
  - name: "install jdbcrunner dependency library"
    become: yes
    yum: name="{{ item }}" state=present
    with_items:
      - git
#      - java-1.7.0-openjdk-devel
      - ant
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner
      - installjdbcrunner

  - name: "create user"
    become: yes
    become_user: oracle
    script: createuser.sh "{{ SIDNAME }}1"
    when: inventory_hostname == groups["dbserver"][0]
    register: createuser_result
    tags:
      - jdbcrunner   


  - debug: var=createuser_result.stdout_lines
    when: inventory_hostname == groups["dbserver"][0]
    tags:
      - jdbcrunner

  - name:
    become: yes
    become_user: oracle
    git:
      repo: https://github.com/sh2/jdbcrunner.git
      dest: /home/oracle/jdbcrunner
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner
      - installjdbcrunner

  - name: ant
    become: yes
    become_user: oracle
    shell: /usr/bin/ant && touch ant.txt
    args:
      chdir: /home/oracle/jdbcrunner
      creates: ant.txt
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner
      - installjdbcrunner
  
  - name: copy jdbc driver
    become: yes
    become_user: oracle
    shell: scp {{ ORA_ORACLE_HOME }}/jdbc/lib/ojdbc8.jar oracle@{{ hostvars[groups['client'][0]]["ansible_vxlan0"]['ipv4']['address'] }}:/home/oracle/jdbcrunner/lib
    when: inventory_hostname == groups["dbserver"][0]
    tags:
      - jdbcrunner
      - installjdbcrunner

  - name: load tpcc data
    become: yes
    become_user: oracle
    shell: "{{ ORA_ORACLE_HOME }}/jdk/bin/java -Djava.security.egd=file:/dev/./urandom -cp jdbcrunner-1.3.jar:lib/* JR scripts/tpcc_load.js -jdbcUrl jdbc:oracle:thin:@{{ hostvars[groups['dbserver'][0]]['ansible_vxlan0']['ipv4']['address'] }}:1521:{{ SIDNAME }}1"
    args:
      chdir: /home/oracle/jdbcrunner
    when: inventory_hostname == groups["dbserver"][0]
    register: tpccload_result
    tags:
      - jdbcrunner


  - debug: var=tpccload_result.stdout_lines
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner

  - name: exec tpcc
    become: yes
    become_user: oracle
    shell: "/usr/bin/java -Djava.security.egd=file:/dev/./urandom -cp jdbcrunner-1.3.jar:lib/* JR scripts/tpcc.js -trace -debug -nAgents 1 -measurementTime 60 -warmupTime 10 -jdbcUrl jdbc:oracle:thin:@{{ hostvars[groups['dbserver'][0]]['ansible_vxlan0']['ipv4']['address'] }}:1521:{{ SIDNAME }}1"
    args:
      chdir: /home/oracle/jdbcrunner
    when: inventory_hostname == groups["client"][0]
    async: 300
    poll: 10
    register: tpcc_result
    tags:
      - jdbcrunner
      - tpcc_exec

  - debug: var=tpcc_result.stdout_lines
    when: inventory_hostname == groups["client"][0]
    tags:
      - jdbcrunner
      - tpcc_exec

---
  - name: "create group"
    become: yes
    group: name={{ item.name }} state=present gid={{ item.gid }}
    with_items:
      - { name: 'oinstall', gid: '601' }
      - { name: 'dba', gid: '602' }
      - { name: 'oper', gid: '603' }
      - { name: 'asmadmin', gid: '2001' }
      - { name: 'asmdba', gid: '2002' }
      - { name: 'asmoper', gid: '2003' }
    tags:
      - createuser

  - name: "delete user"
    become: yes
    user: name={{ item }} state=absent remove=yes
    with_items:
      - oracle
      - grid
    tags:
      - createuser

  - name: "create user"
    become: yes
    user: name={{ item.name}} uid={{ item.uid }} group=oinstall groups={{ item.groups}} shell=/bin/bash
    with_items:
      - { name: 'oracle', uid: '501',groups: 'dba,oper,asmdba' }
      - { name: 'grid', uid: '2001',groups: 'asmadmin,asmdba,asmoper' }
    tags:
      - createuser

  - name: "copy .bashrc"
    become: yes
    copy: src=.bashrc dest=/home/{{ item }}/.bashrc mode=644 owner={{ item }} group=oinstall 
    with_items:
      - oracle
      - grid
    tags:
      - profile
      - createuser

  - name: "copy .bash_profile"
    become: yes
    template: src=.bash_profile_{{ item }}.j2 dest=/home/{{ item }}/.bash_profile mode=0644 owner={{ item }} group=oinstall
    with_items:
      - oracle
      - grid
    tags:
      - profile
      - createuser
      
  - name: "create ssh key"
    local_action: shell ssh-keygen -t rsa -P "" -f id_rsa
    args:
      creates: id_rsa
    run_once: true
    tags:
      - sshkey
 
  - name: "copy authorized key"
    become: yes
    authorized_key: user={{ item }} key="{{ lookup('file', 'id_rsa.pub') }}" 
    with_items:
      - oracle
      - grid
    tags:
      - sshkey

  - name: "copy private key"
    become: yes
    copy: dest=/home/{{ item }}/.ssh/id_rsa mode=600 owner={{ item }} group=oinstall content="{{ lookup('file', 'id_rsa') }}"
    with_items:
      - oracle
      - grid
    tags:
      - sshkey

  - name: "create known hosts"
    become: yes
    template: src=known_hosts.j2 dest=/home/{{ item }}/.ssh/known_hosts owner={{ item }} group=oinstall mode=0644
    with_items:
      - oracle
      - grid
    tags:
      - sshkey


  - name: "delete ssh key"
    local_action: shell rm -rf id_rsa*
    run_once: true
    tags:
      - sshkey


  - name: "copy limits.nonf"
    become: yes
    copy: src=limits.conf dest=/etc/security/limits.conf mode=644 owner=root group=root
    tags:
      - kernel

  - name: "copy ifcfg-lo"
    become: yes
    copy: src=ifcfg-lo dest=/etc/sysconfig/network-scripts/ifcfg-lo mode=644 owner=root group=root
    tags:
      - kernel

  - name: "restart network"
    become: yes
    service: name=network.service state=restarted
    tags:
      - kernel

  - name: "disable ntpd"
    become: yes
    service: name=ntpd.service state=stopped enabled=no
    ignore_errors: yes
    tags:
      - ntp

  - name: "mv ntpd.conf"
    become: yes
    shell: mv /etc/ntp.conf /etc/ntp.conf.original
    args:
      creates: /etc/ntp.conf.original
    ignore_errors: yes
    tags:
      - ntp

  - name: "rm  ntpd.pid"
    become: yes
    file: path=/var/run/ntpd.pid state=absent
    ignore_errors: yes
    tags:
      - ntp

  - name: "fdisk data_disk_dev"
    become: yes
    filesystem: fstype=xfs dev={{ data_disk_dev }}
    when: data_disk_dev is defined and data_disk_dev !=""
    tags:
      - oraclehome

  - name: "create data_disk mountpoint"
    become: yes
    file: path={{ data_disk_mountpoint }} state=directory owner=grid group=oinstall mode=0755
    when: data_disk_dev is defined and data_disk_dev !=""
    tags:
      - oraclehome

  - name: "mount data_disk_dev"
    become: yes
    mount: name={{ data_disk_mountpoint }} src={{ data_disk_dev }}1 fstype=xfs opts=defaults passno=0 dump=0 state=mounted
    when: data_disk_dev is defined and data_disk_dev !=""
    tags:
      - oraclehome

  - name: "create gridbase gridhome oradata orainventry"
    become: yes
    file: path={{ item.path }} state=directory owner={{ item.name }} group=oinstall mode=0755
    with_items:
      - { name: 'grid', path: "{{ ORAINVENTORY }}" }
      - { name: 'grid', path: "{{ GRID_ORACLE_BASE }}" }
      - { name: 'grid', path: "{{ GRID_ORACLE_HOME }}" }
      - { name: 'oracle', path: "{{ ORA_ORACLE_BASE }}" }
      - { name: 'oracle', path: "{{ ORA_ORACLE_HOME }}" }
    tags:
      - oraclehome

  - name: "install preinstall packages"
    become: yes
    yum: name={{ PreInstallRPM }} state=present enablerepo=ol7_optional_latest
    tags:
      - preinstallpackages

  - name: "create swap(dd)"
    become: yes
    shell: dd if=/dev/zero of=/swap bs=1M count={{ SWAP_SIZE }} && mkswap /swap
    async: "{{ ASYNC }}"
    poll: "{{ POLL }}"
    when: ansible_swaptotal_mb < 1
    tags:
      - ddswap
      - swap

  - name: "create swap(swapon)"
    become: yes
    shell: swapon /swap
    when: ansible_swaptotal_mb < 1
    tags:
      - swapon
      - swap
      
  - name: "mount swap(fstab)"
    become: yes
    mount: name=swap src=/swap fstype=swap opts=defaults passno=0 dump=0 state=present
    when: ansible_swaptotal_mb < 1
    tags:
      - fstabswap
      - swap
